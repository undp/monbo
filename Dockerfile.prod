# Build stage for frontend
FROM --platform=linux/amd64 node:20-alpine AS frontend-builder
WORKDIR /app/frontend
# Install pnpm
RUN npm install -g pnpm
COPY monbo-front/package*.json monbo-front/pnpm-lock.yaml ./
# Use pnpm instead of npm ci
RUN pnpm install --frozen-lockfile
COPY monbo-front/ .
RUN pnpm run build

# Build stage for backend
FROM --platform=linux/amd64 python:3.11-slim AS backend-builder
WORKDIR /app/backend
RUN apt-get update && apt-get install -y \
    gdal-bin \
    libgdal-dev \
    libexpat1 \
    gcc \
    g++ \
    python3-dev \
    && rm -rf /var/lib/apt/lists/*

# Set GDAL environment variables
ENV CPLUS_INCLUDE_PATH=/usr/include/gdal
ENV C_INCLUDE_PATH=/usr/include/gdal

COPY monbo-api/requirements.txt ./
RUN pip install --no-cache-dir -r requirements.txt
COPY monbo-api/ .

# Final stage
FROM --platform=linux/amd64 python:3.11-slim
WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y \
    gdal-bin \
    libgdal-dev \
    libexpat1 \
    nodejs \
    npm \
    # Install pnpm instead of npm
    && npm install -g pnpm \
    && rm -rf /var/lib/apt/lists/*

# Copy backend
COPY --from=backend-builder /app/backend /app/backend
COPY --from=backend-builder /usr/local/lib/python3.11/site-packages /usr/local/lib/python3.11/site-packages
COPY --from=backend-builder /usr/local/bin/uvicorn /usr/local/bin/uvicorn

# Copy frontend
COPY --from=frontend-builder /app/frontend/.next/standalone /app/frontend
COPY --from=frontend-builder /app/frontend/.next/static /app/frontend/.next/static
COPY --from=frontend-builder /app/frontend/public /app/frontend/public

# Create start script
RUN echo '#!/bin/bash\n\
    cd /app/backend && uvicorn app.main:app --host 0.0.0.0 --port 8000 2>&1 | stdbuf -oL sed "s/^/[API] /" & \n\
    cd /app/frontend && HOSTNAME="0.0.0.0" node server.js 2>&1 | stdbuf -oL sed "s/^/[FRONT] /" & \n\
    wait' > /app/start.sh && chmod +x /app/start.sh

EXPOSE 3000 8000
CMD ["/app/start.sh"]